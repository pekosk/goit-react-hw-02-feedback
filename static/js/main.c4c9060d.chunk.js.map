{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Feedback/Feedback.module.css"],"names":["module","exports","Section","title","children","className","styles","section","prototype","PropTypes","string","isRequired","node","Feedback","options","onLeaveFeedback","button","map","listItem","feedbackBtn","type","value","onClick","btnList","proptype","arrayOf","func","Statistics","good","neutral","bad","total","positivePercentage","statList","statListItem","statText","Notification","message","App","state","countTotalFeedback","onStatBtnClick","event","currentStatBtnValue","currentTarget","setState","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4c9060d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__1j3yP\"};","import styles from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styles from \"./Feedback.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Feedback = ({ options, onLeaveFeedback }) => {\r\n  const button = options.map(button => (\r\n    <li key={button} className={styles.listItem}>\r\n      <button className={styles.feedbackBtn} type=\"button\" value={button} onClick={onLeaveFeedback}>\r\n        {button}\r\n      </button>\r\n    </li>\r\n  ));\r\n    return (\r\n        <ul className={styles.btnList}>\r\n            {button}\r\n        </ul>\r\n    )\r\n};\r\n\r\nFeedback.proptype = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Feedback;\r\n","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <ul className={styles.statList}>\r\n            <li className={styles.statListItem}>\r\n                <p className={styles.statText}>Good: {good}</p>\r\n            </li>\r\n            <li className={styles.statListItem}>\r\n                <p className={styles.statText}>Neutral: {neutral}</p>\r\n            </li>\r\n            <li className={styles.statListItem}>\r\n                <p className={styles.statText}>Bad: {bad}</p>\r\n            </li>\r\n            <li className={styles.statListItem}>\r\n                <p className={styles.statText}>Total: {total}</p>\r\n            </li>\r\n            <li className={styles.statListItem}>\r\n                <p className={styles.statText}>Positive feedback: {positivePercentage}%</p>\r\n            </li>\r\n    </ul>\r\n )\r\n}\r\n\r\nStatistics.prototype = {\r\n    \r\n}\r\n\r\nexport default Statistics;","import styles from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={styles.message}>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.proptype = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import './App.css';\nimport React, { Component } from 'react';\nimport Section from './components/Section';\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  options = ['good', 'neutral', 'bad'];\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  onStatBtnClick = event => {\n    const currentStatBtnValue = event.currentTarget.value;\n    this.setState(state => ({ ...state, [currentStatBtnValue]: state[currentStatBtnValue] + 1, }))\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <Feedback options={this.options}\n            onLeaveFeedback={this.onStatBtnClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            < Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()} />) : (<Notification message=\"There is no feedback\" />)}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"Feedback_btnList__bzPYW\",\"listItem\":\"Feedback_listItem__1cGOm\"};"],"sourceRoot":""}